pipeline {

	/*
	* Run everything on an existing agent configured with a label 'docker'.
	* This agent will need docker, git and a jdk installed at a minimum.
	* https://stackoverflow.com/questions/26472586/upgrade-docker-on-centos-7
	* install latest docker
	* start docker demon
	* "chmod 666 /var/run/docker.sock"
	*/
	/*
	* https://xerosecurity.com/wordpress/documentation/
	*/

    agent {
        node {
            label 'master'
        }
    }
    // using the Timestamper plugin we can add timestamps to the console log
    options {
        timestamps()
        disableConcurrentBuilds()
    }
    environment {
        //Use Pipeline Utility Steps plugin to read information from pom.xml into env variables
        IMAGE = 'sn1per'
        VERSION = '1'
        
        //Use Pipeline Utility Steps for python env variables
        //IMAGE = 'simplejavaproject'
        //VERSION = readMavenPom().getVersion()
        //VERSION = '2.2.2'
        
	//registry = "myreg/docker-test"
	//imagename = "cloudties/dockerimage"
	//registryCredential = 'cloudties123$'
	//dockerImage = ''
    }

    stages {
        stage('Remove Unused docker image') {
             steps {
               script {
		       sh """#!/bin/bash docker ps  name=\$( docker ps  -a |  grep sn1per  | awk '{print \$1}') -q | xargs --no-run-if-empty docker container stop'
		       """
		       sh 'docker container ls -a -fname=\$(docker ps  -a |  grep sn1per | awk '{print $1}') -q | xargs -r docker container rm'
			//sh "docker rmi ${IMAGE}:${VERSION}"
			//sh "docker rmi ${IMAGE}:latest"
			sh "docker image ls"
                }
            }
        }
        
    }
}	